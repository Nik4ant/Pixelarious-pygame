import os
import sys

import pygame


if __name__ == '__main__':
    sys.path.append(os.curdir)
    # Инициализация pygame и mixer'а
    pygame.init()
    pygame.mixer.init(44100, -16, 12, 64)
    # Экран (будет использоваться везде далее)
    screen = pygame.display.set_mode(flags=pygame.FULLSCREEN | pygame.HWSURFACE | pygame.DOUBLEBUF,
                                     vsync=False)
    # Эти модули нужно импортировать именно тут, т.к. в них происходят действия,
    # возможные только после инициализации pygame, экрана и mixer'а
    # (например, загрузка картинок, звуков)
    import game
    from UI import start_screen
    '''
    code - это переменная с последним кодом, полученным после выполнения
    какого-либо меню (включая игровой процесс). 
    Это нужно для базовых переключений между:
    - стартового меню
    - игрового процесса (т.е. самой игрой)
    - выхода из игры
    Список обозначений переменной code относительно main.py:
    -1 - ничего (т.е. такое же поведение как при запуске файла с игрой)
    0 - выход из игры
    1 - запуск игрового процесса 
    2 - запуск игрового процесса с начала (т.е. во время игры без выхода в 
    меню начинается новая игра, этот код напрямую связан с меню паузы, где и находится
    кнопка "начать заного")
    
    Информация о кодах других меню (паузы и конца игры) находятся в их описании 
    возвращаемого значения функции запуска
    '''
    code = -1
    while code != 0:
        # Вызов начального экрана
        if code != 2:
            code = start_screen.execute(screen)
        # Дополнительная проверка, т.к. после начального экрана code мог
        # стать кодом для закрытия игры
        if code != 0:
            # Сид сохранения. Будет загружен с файла сохранения, если он есть
            seed = None
            # Номер уровня с которого начнётся игра
            # (тоже будет загруден с файла сохранения, если он есть)
            level_number = 1
            # Если файл сохранения сушествует, считываем его
            if os.path.isfile("data\\save.txt") and code != 2:
                with open('data\\save.txt', 'r', encoding="utf-8") as file:
                    seed = file.read()
                # Дополнительная проверка нужна, т.к. файл может существовать
                # без данных (например, когда игрок умирает, прогресс стирается)
                if seed:
                    # Если данные есть, то из них выделяется номер уровня и
                    # сид с информацией о игроке, его помошнике/помошниках, уровне и т.д.
                    data = seed.split('\n')
                    seed, level_number = '\n'.join(data[:-1]), int(data[-1])
            # Запуск игрового процесса c получением кода его выполнения
            # (описание и назначение см. выше)
            code = game.play(screen, level_number=level_number, user_seed=seed)
    # Закрытие pygame и mixer'а
    pygame.quit()
    pygame.mixer.quit()
